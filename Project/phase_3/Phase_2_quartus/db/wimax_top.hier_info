|wimax_top
clk => pll:pll_clk.refclk
rset => pll:pll_clk.rst
data_in_ready => prbs_rtl:prbs.data_in_ready_prbs
data_in => prbs_rtl:prbs.data_in_prbs
data_out_I[0] << modulator_rtl:modulator.data_out_I[0]
data_out_I[1] << modulator_rtl:modulator.data_out_I[1]
data_out_I[2] << modulator_rtl:modulator.data_out_I[2]
data_out_I[3] << modulator_rtl:modulator.data_out_I[3]
data_out_I[4] << modulator_rtl:modulator.data_out_I[4]
data_out_I[5] << modulator_rtl:modulator.data_out_I[5]
data_out_I[6] << modulator_rtl:modulator.data_out_I[6]
data_out_I[7] << modulator_rtl:modulator.data_out_I[7]
data_out_I[8] << modulator_rtl:modulator.data_out_I[8]
data_out_I[9] << modulator_rtl:modulator.data_out_I[9]
data_out_I[10] << modulator_rtl:modulator.data_out_I[10]
data_out_I[11] << modulator_rtl:modulator.data_out_I[11]
data_out_I[12] << modulator_rtl:modulator.data_out_I[12]
data_out_I[13] << modulator_rtl:modulator.data_out_I[13]
data_out_I[14] << modulator_rtl:modulator.data_out_I[14]
data_out_I[15] << modulator_rtl:modulator.data_out_I[15]
data_out_Q[0] << modulator_rtl:modulator.data_out_Q[0]
data_out_Q[1] << modulator_rtl:modulator.data_out_Q[1]
data_out_Q[2] << modulator_rtl:modulator.data_out_Q[2]
data_out_Q[3] << modulator_rtl:modulator.data_out_Q[3]
data_out_Q[4] << modulator_rtl:modulator.data_out_Q[4]
data_out_Q[5] << modulator_rtl:modulator.data_out_Q[5]
data_out_Q[6] << modulator_rtl:modulator.data_out_Q[6]
data_out_Q[7] << modulator_rtl:modulator.data_out_Q[7]
data_out_Q[8] << modulator_rtl:modulator.data_out_Q[8]
data_out_Q[9] << modulator_rtl:modulator.data_out_Q[9]
data_out_Q[10] << modulator_rtl:modulator.data_out_Q[10]
data_out_Q[11] << modulator_rtl:modulator.data_out_Q[11]
data_out_Q[12] << modulator_rtl:modulator.data_out_Q[12]
data_out_Q[13] << modulator_rtl:modulator.data_out_Q[13]
data_out_Q[14] << modulator_rtl:modulator.data_out_Q[14]
data_out_Q[15] << modulator_rtl:modulator.data_out_Q[15]
data_out_valid << modulator_rtl:modulator.data_out_valid_mod


|wimax_top|prbs_rtl:prbs
clk1 => data_out_valid_int.CLK
clk1 => r_reg[0].CLK
clk1 => r_reg[1].CLK
clk1 => r_reg[2].CLK
clk1 => r_reg[3].CLK
clk1 => r_reg[4].CLK
clk1 => r_reg[5].CLK
clk1 => r_reg[6].CLK
clk1 => r_reg[7].CLK
clk1 => r_reg[8].CLK
clk1 => r_reg[9].CLK
clk1 => r_reg[10].CLK
clk1 => r_reg[11].CLK
clk1 => r_reg[12].CLK
clk1 => r_reg[13].CLK
clk1 => r_reg[14].CLK
reset => data_out_valid_int.ACLR
reset => r_reg[0].PRESET
reset => r_reg[1].ACLR
reset => r_reg[2].PRESET
reset => r_reg[3].ACLR
reset => r_reg[4].PRESET
reset => r_reg[5].ACLR
reset => r_reg[6].ACLR
reset => r_reg[7].ACLR
reset => r_reg[8].PRESET
reset => r_reg[9].PRESET
reset => r_reg[10].PRESET
reset => r_reg[11].ACLR
reset => r_reg[12].PRESET
reset => r_reg[13].PRESET
reset => r_reg[14].ACLR
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => r_reg.OUTPUTSELECT
data_in_ready_prbs => data_out_valid_int.OUTPUTSELECT
data_in_ready_prbs => r_reg[14].ENA
data_in_ready_prbs => r_reg[13].ENA
data_in_ready_prbs => r_reg[12].ENA
data_in_ready_prbs => r_reg[11].ENA
data_in_ready_prbs => r_reg[10].ENA
data_in_ready_prbs => r_reg[9].ENA
data_in_ready_prbs => r_reg[8].ENA
data_in_ready_prbs => r_reg[7].ENA
data_in_ready_prbs => r_reg[6].ENA
data_in_ready_prbs => r_reg[5].ENA
data_in_ready_prbs => r_reg[4].ENA
data_in_ready_prbs => r_reg[3].ENA
data_in_ready_prbs => r_reg[2].ENA
data_in_ready_prbs => r_reg[1].ENA
data_in_ready_prbs => r_reg[0].ENA
data_in_ready_prbs => data_out_valid_int.ENA
data_in_prbs => data_out_prbs.IN1
data_out_prbs <= data_out_prbs.DB_MAX_OUTPUT_PORT_TYPE
data_out_valid_prbs <= data_out_valid_int.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top|fec_rtl:fec
clk1 => dpr:RAM_2port.clock_a
clk1 => address_a[0].CLK
clk1 => address_a[1].CLK
clk1 => address_a[2].CLK
clk1 => address_a[3].CLK
clk1 => address_a[4].CLK
clk1 => address_a[5].CLK
clk1 => address_a[6].CLK
clk1 => address_a[7].CLK
clk1 => wren_b.CLK
clk1 => wren_a.CLK
clk2 => dpr:RAM_2port.clock_b
clk2 => holdC.CLK
clk2 => shift_reg[0].CLK
clk2 => shift_reg[1].CLK
clk2 => shift_reg[2].CLK
clk2 => shift_reg[3].CLK
clk2 => shift_reg[4].CLK
clk2 => shift_reg[5].CLK
clk2 => holdCount[0].CLK
clk2 => holdCount[1].CLK
clk2 => holdCount[2].CLK
clk2 => holdCount[3].CLK
clk2 => holdCount[4].CLK
clk2 => holdCount[5].CLK
clk2 => holdCount[6].CLK
clk2 => holdCount[7].CLK
clk2 => holdCount[8].CLK
clk2 => holdCount[9].CLK
clk2 => holdCount[10].CLK
clk2 => holdCount[11].CLK
clk2 => holdCount[12].CLK
clk2 => holdCount[13].CLK
clk2 => holdCount[14].CLK
clk2 => holdCount[15].CLK
clk2 => holdCount[16].CLK
clk2 => holdCount[17].CLK
clk2 => holdCount[18].CLK
clk2 => holdCount[19].CLK
clk2 => holdCount[20].CLK
clk2 => holdCount[21].CLK
clk2 => holdCount[22].CLK
clk2 => holdCount[23].CLK
clk2 => holdCount[24].CLK
clk2 => holdCount[25].CLK
clk2 => holdCount[26].CLK
clk2 => holdCount[27].CLK
clk2 => holdCount[28].CLK
clk2 => holdCount[29].CLK
clk2 => holdCount[30].CLK
clk2 => holdCount[31].CLK
clk2 => address_b[0].CLK
clk2 => address_b[1].CLK
clk2 => address_b[2].CLK
clk2 => address_b[3].CLK
clk2 => address_b[4].CLK
clk2 => state_counter[0].CLK
clk2 => state_counter[1].CLK
clk2 => state_counter[2].CLK
clk2 => data_out_valid_int.CLK
clk2 => data_out_int.CLK
clk2 => state_reg~7.DATAIN
rst => holdCount[0].ACLR
rst => holdCount[1].ACLR
rst => holdCount[2].ACLR
rst => holdCount[3].ACLR
rst => holdCount[4].ACLR
rst => holdCount[5].ACLR
rst => holdCount[6].ACLR
rst => holdCount[7].ACLR
rst => holdCount[8].ACLR
rst => holdCount[9].ACLR
rst => holdCount[10].ACLR
rst => holdCount[11].ACLR
rst => holdCount[12].ACLR
rst => holdCount[13].ACLR
rst => holdCount[14].ACLR
rst => holdCount[15].ACLR
rst => holdCount[16].ACLR
rst => holdCount[17].ACLR
rst => holdCount[18].ACLR
rst => holdCount[19].ACLR
rst => holdCount[20].ACLR
rst => holdCount[21].ACLR
rst => holdCount[22].ACLR
rst => holdCount[23].ACLR
rst => holdCount[24].ACLR
rst => holdCount[25].ACLR
rst => holdCount[26].ACLR
rst => holdCount[27].ACLR
rst => holdCount[28].ACLR
rst => holdCount[29].ACLR
rst => holdCount[30].ACLR
rst => holdCount[31].ACLR
rst => address_b[0].ACLR
rst => address_b[1].ACLR
rst => address_b[2].ACLR
rst => address_b[3].ACLR
rst => address_b[4].ACLR
rst => state_counter[0].ACLR
rst => state_counter[1].ACLR
rst => state_counter[2].ACLR
rst => data_out_valid_int.ACLR
rst => data_out_int.ACLR
rst => state_reg~9.DATAIN
rst => address_a[0].ACLR
rst => address_a[1].ACLR
rst => address_a[2].ACLR
rst => address_a[3].ACLR
rst => address_a[4].ACLR
rst => address_a[5].ACLR
rst => address_a[6].ACLR
rst => address_a[7].ACLR
rst => wren_b.ACLR
rst => wren_a.ACLR
rst => holdC.ENA
rst => shift_reg[5].ENA
rst => shift_reg[4].ENA
rst => shift_reg[3].ENA
rst => shift_reg[2].ENA
rst => shift_reg[1].ENA
rst => shift_reg[0].ENA
data_in_ready_fec => wren_a.DATAIN
data_in_ready_fec => address_a[7].ENA
data_in_ready_fec => address_a[6].ENA
data_in_ready_fec => address_a[5].ENA
data_in_ready_fec => address_a[4].ENA
data_in_ready_fec => address_a[3].ENA
data_in_ready_fec => address_a[2].ENA
data_in_ready_fec => address_a[1].ENA
data_in_ready_fec => address_a[0].ENA
data_out_valid_fec <= data_out_valid_int.DB_MAX_OUTPUT_PORT_TYPE
data_in_fec => dpr:RAM_2port.data_a[0]
data_out_fec <= data_out_int.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top|fec_rtl:fec|dpr:RAM_2port
address_a[0] => altsyncram:altsyncram_component.address_a[0]
address_a[1] => altsyncram:altsyncram_component.address_a[1]
address_a[2] => altsyncram:altsyncram_component.address_a[2]
address_a[3] => altsyncram:altsyncram_component.address_a[3]
address_a[4] => altsyncram:altsyncram_component.address_a[4]
address_a[5] => altsyncram:altsyncram_component.address_a[5]
address_a[6] => altsyncram:altsyncram_component.address_a[6]
address_a[7] => altsyncram:altsyncram_component.address_a[7]
address_b[0] => altsyncram:altsyncram_component.address_b[0]
address_b[1] => altsyncram:altsyncram_component.address_b[1]
address_b[2] => altsyncram:altsyncram_component.address_b[2]
address_b[3] => altsyncram:altsyncram_component.address_b[3]
address_b[4] => altsyncram:altsyncram_component.address_b[4]
clock_a => altsyncram:altsyncram_component.clock0
clock_b => altsyncram:altsyncram_component.clock1
data_a[0] => altsyncram:altsyncram_component.data_a[0]
data_b[0] => altsyncram:altsyncram_component.data_b[0]
data_b[1] => altsyncram:altsyncram_component.data_b[1]
data_b[2] => altsyncram:altsyncram_component.data_b[2]
data_b[3] => altsyncram:altsyncram_component.data_b[3]
data_b[4] => altsyncram:altsyncram_component.data_b[4]
data_b[5] => altsyncram:altsyncram_component.data_b[5]
data_b[6] => altsyncram:altsyncram_component.data_b[6]
data_b[7] => altsyncram:altsyncram_component.data_b[7]
wren_a => altsyncram:altsyncram_component.wren_a
wren_b => altsyncram:altsyncram_component.wren_b
q_a[0] <= altsyncram:altsyncram_component.q_a[0]
q_b[0] <= altsyncram:altsyncram_component.q_b[0]
q_b[1] <= altsyncram:altsyncram_component.q_b[1]
q_b[2] <= altsyncram:altsyncram_component.q_b[2]
q_b[3] <= altsyncram:altsyncram_component.q_b[3]
q_b[4] <= altsyncram:altsyncram_component.q_b[4]
q_b[5] <= altsyncram:altsyncram_component.q_b[5]
q_b[6] <= altsyncram:altsyncram_component.q_b[6]
q_b[7] <= altsyncram:altsyncram_component.q_b[7]


|wimax_top|fec_rtl:fec|dpr:RAM_2port|altsyncram:altsyncram_component
wren_a => altsyncram_6404:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => altsyncram_6404:auto_generated.wren_b
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_6404:auto_generated.data_a[0]
data_b[0] => altsyncram_6404:auto_generated.data_b[0]
data_b[1] => altsyncram_6404:auto_generated.data_b[1]
data_b[2] => altsyncram_6404:auto_generated.data_b[2]
data_b[3] => altsyncram_6404:auto_generated.data_b[3]
data_b[4] => altsyncram_6404:auto_generated.data_b[4]
data_b[5] => altsyncram_6404:auto_generated.data_b[5]
data_b[6] => altsyncram_6404:auto_generated.data_b[6]
data_b[7] => altsyncram_6404:auto_generated.data_b[7]
address_a[0] => altsyncram_6404:auto_generated.address_a[0]
address_a[1] => altsyncram_6404:auto_generated.address_a[1]
address_a[2] => altsyncram_6404:auto_generated.address_a[2]
address_a[3] => altsyncram_6404:auto_generated.address_a[3]
address_a[4] => altsyncram_6404:auto_generated.address_a[4]
address_a[5] => altsyncram_6404:auto_generated.address_a[5]
address_a[6] => altsyncram_6404:auto_generated.address_a[6]
address_a[7] => altsyncram_6404:auto_generated.address_a[7]
address_b[0] => altsyncram_6404:auto_generated.address_b[0]
address_b[1] => altsyncram_6404:auto_generated.address_b[1]
address_b[2] => altsyncram_6404:auto_generated.address_b[2]
address_b[3] => altsyncram_6404:auto_generated.address_b[3]
address_b[4] => altsyncram_6404:auto_generated.address_b[4]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_6404:auto_generated.clock0
clock1 => altsyncram_6404:auto_generated.clock1
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_6404:auto_generated.q_a[0]
q_b[0] <= altsyncram_6404:auto_generated.q_b[0]
q_b[1] <= altsyncram_6404:auto_generated.q_b[1]
q_b[2] <= altsyncram_6404:auto_generated.q_b[2]
q_b[3] <= altsyncram_6404:auto_generated.q_b[3]
q_b[4] <= altsyncram_6404:auto_generated.q_b[4]
q_b[5] <= altsyncram_6404:auto_generated.q_b[5]
q_b[6] <= altsyncram_6404:auto_generated.q_b[6]
q_b[7] <= altsyncram_6404:auto_generated.q_b[7]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|wimax_top|fec_rtl:fec|dpr:RAM_2port|altsyncram:altsyncram_component|altsyncram_6404:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
clock0 => ram_block1a0.CLK0
clock1 => ram_block1a0.CLK1
data_a[0] => ram_block1a0.PORTADATAIN
data_b[0] => ram_block1a0.PORTBDATAIN
data_b[1] => ram_block1a0.PORTBDATAIN1
data_b[2] => ram_block1a0.PORTBDATAIN2
data_b[3] => ram_block1a0.PORTBDATAIN3
data_b[4] => ram_block1a0.PORTBDATAIN4
data_b[5] => ram_block1a0.PORTBDATAIN5
data_b[6] => ram_block1a0.PORTBDATAIN6
data_b[7] => ram_block1a0.PORTBDATAIN7
q_a[0] <= ram_block1a0.PORTADATAOUT
q_b[0] <= ram_block1a0.PORTBDATAOUT
q_b[1] <= ram_block1a0.PORTBDATAOUT1
q_b[2] <= ram_block1a0.PORTBDATAOUT2
q_b[3] <= ram_block1a0.PORTBDATAOUT3
q_b[4] <= ram_block1a0.PORTBDATAOUT4
q_b[5] <= ram_block1a0.PORTBDATAOUT5
q_b[6] <= ram_block1a0.PORTBDATAOUT6
q_b[7] <= ram_block1a0.PORTBDATAOUT7
wren_a => ram_block1a0.PORTAWE
wren_b => ram_block1a0.PORTBWE


|wimax_top|interleaver_rtl_2:interleaver
clk2 => dpr_interleaver:RAM_interleaver.clock
clk2 => data_a[0].CLK
clk2 => address_b[0].CLK
clk2 => address_b[1].CLK
clk2 => address_b[2].CLK
clk2 => address_b[3].CLK
clk2 => address_b[4].CLK
clk2 => address_b[5].CLK
clk2 => address_b[6].CLK
clk2 => address_b[7].CLK
clk2 => address_b[8].CLK
clk2 => address_a[0].CLK
clk2 => address_a[1].CLK
clk2 => address_a[2].CLK
clk2 => address_a[3].CLK
clk2 => address_a[4].CLK
clk2 => address_a[5].CLK
clk2 => address_a[6].CLK
clk2 => address_a[7].CLK
clk2 => address_a[8].CLK
clk2 => data_out_valid_int.CLK
clk2 => data_out_int.CLK
clk2 => counter_b[0].CLK
clk2 => counter_b[1].CLK
clk2 => counter_b[2].CLK
clk2 => counter_b[3].CLK
clk2 => counter_b[4].CLK
clk2 => counter_b[5].CLK
clk2 => counter_b[6].CLK
clk2 => counter_b[7].CLK
clk2 => counter_b[8].CLK
clk2 => counter_a[0].CLK
clk2 => counter_a[1].CLK
clk2 => counter_a[2].CLK
clk2 => counter_a[3].CLK
clk2 => counter_a[4].CLK
clk2 => counter_a[5].CLK
clk2 => counter_a[6].CLK
clk2 => counter_a[7].CLK
clk2 => state_reg~2.DATAIN
rst => state_reg.input_output.OUTPUTSELECT
rst => state_reg.input_a.OUTPUTSELECT
rst => state_reg.idle.OUTPUTSELECT
rst => address_b[0].ACLR
rst => address_b[1].ACLR
rst => address_b[2].ACLR
rst => address_b[3].ACLR
rst => address_b[4].ACLR
rst => address_b[5].ACLR
rst => address_b[6].ACLR
rst => address_b[7].ACLR
rst => address_b[8].ACLR
rst => address_a[0].ACLR
rst => address_a[1].ACLR
rst => address_a[2].ACLR
rst => address_a[3].ACLR
rst => address_a[4].ACLR
rst => address_a[5].ACLR
rst => address_a[6].ACLR
rst => address_a[7].ACLR
rst => address_a[8].ACLR
rst => data_out_valid_int.ACLR
rst => data_out_int.ACLR
rst => counter_b[0].ACLR
rst => counter_b[1].ACLR
rst => counter_b[2].ACLR
rst => counter_b[3].ACLR
rst => counter_b[4].ACLR
rst => counter_b[5].ACLR
rst => counter_b[6].ACLR
rst => counter_b[7].ACLR
rst => counter_b[8].ACLR
rst => counter_a[0].ACLR
rst => counter_a[1].ACLR
rst => counter_a[2].ACLR
rst => counter_a[3].ACLR
rst => counter_a[4].ACLR
rst => counter_a[5].ACLR
rst => counter_a[6].ACLR
rst => counter_a[7].ACLR
rst => data_a[0].ENA
data_in_ready_inlv => data_a.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => counter_b.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => address_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => counter_a.OUTPUTSELECT
data_in_ready_inlv => Selector0.IN2
data_in_ready_inlv => state_reg.DATAB
data_out_valid_inlv <= data_out_valid_int.DB_MAX_OUTPUT_PORT_TYPE
data_in_inlv => data_a.DATAB
data_in_inlv => Selector2.IN1
data_out_inlv <= data_out_int.DB_MAX_OUTPUT_PORT_TYPE


|wimax_top|interleaver_rtl_2:interleaver|dpr_interleaver:RAM_interleaver
address_a[0] => altsyncram:altsyncram_component.address_a[0]
address_a[1] => altsyncram:altsyncram_component.address_a[1]
address_a[2] => altsyncram:altsyncram_component.address_a[2]
address_a[3] => altsyncram:altsyncram_component.address_a[3]
address_a[4] => altsyncram:altsyncram_component.address_a[4]
address_a[5] => altsyncram:altsyncram_component.address_a[5]
address_a[6] => altsyncram:altsyncram_component.address_a[6]
address_a[7] => altsyncram:altsyncram_component.address_a[7]
address_a[8] => altsyncram:altsyncram_component.address_a[8]
address_b[0] => altsyncram:altsyncram_component.address_b[0]
address_b[1] => altsyncram:altsyncram_component.address_b[1]
address_b[2] => altsyncram:altsyncram_component.address_b[2]
address_b[3] => altsyncram:altsyncram_component.address_b[3]
address_b[4] => altsyncram:altsyncram_component.address_b[4]
address_b[5] => altsyncram:altsyncram_component.address_b[5]
address_b[6] => altsyncram:altsyncram_component.address_b[6]
address_b[7] => altsyncram:altsyncram_component.address_b[7]
address_b[8] => altsyncram:altsyncram_component.address_b[8]
clock => altsyncram:altsyncram_component.clock0
data_a[0] => altsyncram:altsyncram_component.data_a[0]
data_b[0] => altsyncram:altsyncram_component.data_b[0]
wren_a => altsyncram:altsyncram_component.wren_a
wren_b => altsyncram:altsyncram_component.wren_b
q_a[0] <= altsyncram:altsyncram_component.q_a[0]
q_b[0] <= altsyncram:altsyncram_component.q_b[0]


|wimax_top|interleaver_rtl_2:interleaver|dpr_interleaver:RAM_interleaver|altsyncram:altsyncram_component
wren_a => altsyncram_4s04:auto_generated.wren_a
rden_a => ~NO_FANOUT~
wren_b => altsyncram_4s04:auto_generated.wren_b
rden_b => ~NO_FANOUT~
data_a[0] => altsyncram_4s04:auto_generated.data_a[0]
data_b[0] => altsyncram_4s04:auto_generated.data_b[0]
address_a[0] => altsyncram_4s04:auto_generated.address_a[0]
address_a[1] => altsyncram_4s04:auto_generated.address_a[1]
address_a[2] => altsyncram_4s04:auto_generated.address_a[2]
address_a[3] => altsyncram_4s04:auto_generated.address_a[3]
address_a[4] => altsyncram_4s04:auto_generated.address_a[4]
address_a[5] => altsyncram_4s04:auto_generated.address_a[5]
address_a[6] => altsyncram_4s04:auto_generated.address_a[6]
address_a[7] => altsyncram_4s04:auto_generated.address_a[7]
address_a[8] => altsyncram_4s04:auto_generated.address_a[8]
address_b[0] => altsyncram_4s04:auto_generated.address_b[0]
address_b[1] => altsyncram_4s04:auto_generated.address_b[1]
address_b[2] => altsyncram_4s04:auto_generated.address_b[2]
address_b[3] => altsyncram_4s04:auto_generated.address_b[3]
address_b[4] => altsyncram_4s04:auto_generated.address_b[4]
address_b[5] => altsyncram_4s04:auto_generated.address_b[5]
address_b[6] => altsyncram_4s04:auto_generated.address_b[6]
address_b[7] => altsyncram_4s04:auto_generated.address_b[7]
address_b[8] => altsyncram_4s04:auto_generated.address_b[8]
addressstall_a => ~NO_FANOUT~
addressstall_b => ~NO_FANOUT~
clock0 => altsyncram_4s04:auto_generated.clock0
clock1 => ~NO_FANOUT~
clocken0 => ~NO_FANOUT~
clocken1 => ~NO_FANOUT~
clocken2 => ~NO_FANOUT~
clocken3 => ~NO_FANOUT~
aclr0 => ~NO_FANOUT~
aclr1 => ~NO_FANOUT~
byteena_a[0] => ~NO_FANOUT~
byteena_b[0] => ~NO_FANOUT~
q_a[0] <= altsyncram_4s04:auto_generated.q_a[0]
q_b[0] <= altsyncram_4s04:auto_generated.q_b[0]
eccstatus[0] <= <GND>
eccstatus[1] <= <GND>
eccstatus[2] <= <GND>


|wimax_top|interleaver_rtl_2:interleaver|dpr_interleaver:RAM_interleaver|altsyncram:altsyncram_component|altsyncram_4s04:auto_generated
address_a[0] => ram_block1a0.PORTAADDR
address_a[1] => ram_block1a0.PORTAADDR1
address_a[2] => ram_block1a0.PORTAADDR2
address_a[3] => ram_block1a0.PORTAADDR3
address_a[4] => ram_block1a0.PORTAADDR4
address_a[5] => ram_block1a0.PORTAADDR5
address_a[6] => ram_block1a0.PORTAADDR6
address_a[7] => ram_block1a0.PORTAADDR7
address_a[8] => ram_block1a0.PORTAADDR8
address_b[0] => ram_block1a0.PORTBADDR
address_b[1] => ram_block1a0.PORTBADDR1
address_b[2] => ram_block1a0.PORTBADDR2
address_b[3] => ram_block1a0.PORTBADDR3
address_b[4] => ram_block1a0.PORTBADDR4
address_b[5] => ram_block1a0.PORTBADDR5
address_b[6] => ram_block1a0.PORTBADDR6
address_b[7] => ram_block1a0.PORTBADDR7
address_b[8] => ram_block1a0.PORTBADDR8
clock0 => ram_block1a0.CLK0
data_a[0] => ram_block1a0.PORTADATAIN
data_b[0] => ram_block1a0.PORTBDATAIN
q_a[0] <= ram_block1a0.PORTADATAOUT
q_b[0] <= ram_block1a0.PORTBDATAOUT
wren_a => ram_block1a0.PORTAWE
wren_b => ram_block1a0.PORTBWE


|wimax_top|modulator_rtl:modulator
clk => data_out_valid_int.CLK
clk => data_out_Q_int[0].CLK
clk => data_out_Q_int[1].CLK
clk => data_out_Q_int[2].CLK
clk => data_out_Q_int[3].CLK
clk => data_out_Q_int[4].CLK
clk => data_out_Q_int[5].CLK
clk => data_out_Q_int[6].CLK
clk => data_out_Q_int[7].CLK
clk => data_out_Q_int[8].CLK
clk => data_out_Q_int[9].CLK
clk => data_out_Q_int[10].CLK
clk => data_out_Q_int[11].CLK
clk => data_out_Q_int[12].CLK
clk => data_out_Q_int[13].CLK
clk => data_out_Q_int[14].CLK
clk => data_out_Q_int[15].CLK
clk => data_out_I_int[0].CLK
clk => data_out_I_int[1].CLK
clk => data_out_I_int[2].CLK
clk => data_out_I_int[3].CLK
clk => data_out_I_int[4].CLK
clk => data_out_I_int[5].CLK
clk => data_out_I_int[6].CLK
clk => data_out_I_int[7].CLK
clk => data_out_I_int[8].CLK
clk => data_out_I_int[9].CLK
clk => data_out_I_int[10].CLK
clk => data_out_I_int[11].CLK
clk => data_out_I_int[12].CLK
clk => data_out_I_int[13].CLK
clk => data_out_I_int[14].CLK
clk => data_out_I_int[15].CLK
clk => state_reg~4.DATAIN
rst => data_out_valid_int.ACLR
rst => data_out_Q_int[0].ACLR
rst => data_out_Q_int[1].ACLR
rst => data_out_Q_int[2].ACLR
rst => data_out_Q_int[3].ACLR
rst => data_out_Q_int[4].ACLR
rst => data_out_Q_int[5].ACLR
rst => data_out_Q_int[6].ACLR
rst => data_out_Q_int[7].ACLR
rst => data_out_Q_int[8].ACLR
rst => data_out_Q_int[9].ACLR
rst => data_out_Q_int[10].ACLR
rst => data_out_Q_int[11].ACLR
rst => data_out_Q_int[12].ACLR
rst => data_out_Q_int[13].ACLR
rst => data_out_Q_int[14].ACLR
rst => data_out_Q_int[15].ACLR
rst => data_out_I_int[0].ACLR
rst => data_out_I_int[1].ACLR
rst => data_out_I_int[2].ACLR
rst => data_out_I_int[3].ACLR
rst => data_out_I_int[4].ACLR
rst => data_out_I_int[5].ACLR
rst => data_out_I_int[6].ACLR
rst => data_out_I_int[7].ACLR
rst => data_out_I_int[8].ACLR
rst => data_out_I_int[9].ACLR
rst => data_out_I_int[10].ACLR
rst => data_out_I_int[11].ACLR
rst => data_out_I_int[12].ACLR
rst => data_out_I_int[13].ACLR
rst => data_out_I_int[14].ACLR
rst => data_out_I_int[15].ACLR
rst => state_reg~6.DATAIN
data_in_ready_mod => Selector1.IN2
data_in_ready_mod => Selector0.IN0
data_out_valid_mod <= data_out_valid_int.DB_MAX_OUTPUT_PORT_TYPE
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => data_out_I_int.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => data_out_Q_int.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_in_mod => state_reg.OUTPUTSELECT
data_out_I[0] <= data_out_I_int[0].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[1] <= data_out_I_int[1].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[2] <= data_out_I_int[2].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[3] <= data_out_I_int[3].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[4] <= data_out_I_int[4].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[5] <= data_out_I_int[5].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[6] <= data_out_I_int[6].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[7] <= data_out_I_int[7].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[8] <= data_out_I_int[8].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[9] <= data_out_I_int[9].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[10] <= data_out_I_int[10].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[11] <= data_out_I_int[11].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[12] <= data_out_I_int[12].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[13] <= data_out_I_int[13].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[14] <= data_out_I_int[14].DB_MAX_OUTPUT_PORT_TYPE
data_out_I[15] <= data_out_I_int[15].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[0] <= data_out_Q_int[0].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[1] <= data_out_Q_int[1].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[2] <= data_out_Q_int[2].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[3] <= data_out_Q_int[3].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[4] <= data_out_Q_int[4].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[5] <= data_out_Q_int[5].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[6] <= data_out_Q_int[6].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[7] <= data_out_Q_int[7].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[8] <= data_out_Q_int[8].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[9] <= data_out_Q_int[9].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[10] <= data_out_Q_int[10].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[11] <= data_out_Q_int[11].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[12] <= data_out_Q_int[12].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[13] <= data_out_Q_int[13].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[14] <= data_out_Q_int[14].DB_MAX_OUTPUT_PORT_TYPE
data_out_Q[15] <= data_out_Q_int[15].DB_MAX_OUTPUT_PORT_TYPE


|wimax_top|pll:pll_clk
refclk => pll_0002:pll_inst.refclk
rst => pll_0002:pll_inst.rst
outclk_0 <= pll_0002:pll_inst.outclk_0
outclk_1 <= pll_0002:pll_inst.outclk_1
locked <= pll_0002:pll_inst.locked


|wimax_top|pll:pll_clk|pll_0002:pll_inst
refclk => refclk.IN1
rst => rst.IN1
outclk_0 <= altera_pll:altera_pll_i.outclk
outclk_1 <= altera_pll:altera_pll_i.outclk
locked <= altera_pll:altera_pll_i.locked


|wimax_top|pll:pll_clk|pll_0002:pll_inst|altera_pll:altera_pll_i
refclk => general[0].gpll.I_REFCLK
refclk => general[1].gpll.I_REFCLK
refclk1 => ~NO_FANOUT~
fbclk => ~NO_FANOUT~
rst => general[0].gpll.I_RST
rst => general[1].gpll.I_RST
phase_en => ~NO_FANOUT~
updn => ~NO_FANOUT~
num_phase_shifts[0] => ~NO_FANOUT~
num_phase_shifts[1] => ~NO_FANOUT~
num_phase_shifts[2] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
cntsel[0] => ~NO_FANOUT~
cntsel[1] => ~NO_FANOUT~
cntsel[2] => ~NO_FANOUT~
cntsel[3] => ~NO_FANOUT~
cntsel[4] => ~NO_FANOUT~
reconfig_to_pll[0] => ~NO_FANOUT~
reconfig_to_pll[1] => ~NO_FANOUT~
reconfig_to_pll[2] => ~NO_FANOUT~
reconfig_to_pll[3] => ~NO_FANOUT~
reconfig_to_pll[4] => ~NO_FANOUT~
reconfig_to_pll[5] => ~NO_FANOUT~
reconfig_to_pll[6] => ~NO_FANOUT~
reconfig_to_pll[7] => ~NO_FANOUT~
reconfig_to_pll[8] => ~NO_FANOUT~
reconfig_to_pll[9] => ~NO_FANOUT~
reconfig_to_pll[10] => ~NO_FANOUT~
reconfig_to_pll[11] => ~NO_FANOUT~
reconfig_to_pll[12] => ~NO_FANOUT~
reconfig_to_pll[13] => ~NO_FANOUT~
reconfig_to_pll[14] => ~NO_FANOUT~
reconfig_to_pll[15] => ~NO_FANOUT~
reconfig_to_pll[16] => ~NO_FANOUT~
reconfig_to_pll[17] => ~NO_FANOUT~
reconfig_to_pll[18] => ~NO_FANOUT~
reconfig_to_pll[19] => ~NO_FANOUT~
reconfig_to_pll[20] => ~NO_FANOUT~
reconfig_to_pll[21] => ~NO_FANOUT~
reconfig_to_pll[22] => ~NO_FANOUT~
reconfig_to_pll[23] => ~NO_FANOUT~
reconfig_to_pll[24] => ~NO_FANOUT~
reconfig_to_pll[25] => ~NO_FANOUT~
reconfig_to_pll[26] => ~NO_FANOUT~
reconfig_to_pll[27] => ~NO_FANOUT~
reconfig_to_pll[28] => ~NO_FANOUT~
reconfig_to_pll[29] => ~NO_FANOUT~
reconfig_to_pll[30] => ~NO_FANOUT~
reconfig_to_pll[31] => ~NO_FANOUT~
reconfig_to_pll[32] => ~NO_FANOUT~
reconfig_to_pll[33] => ~NO_FANOUT~
reconfig_to_pll[34] => ~NO_FANOUT~
reconfig_to_pll[35] => ~NO_FANOUT~
reconfig_to_pll[36] => ~NO_FANOUT~
reconfig_to_pll[37] => ~NO_FANOUT~
reconfig_to_pll[38] => ~NO_FANOUT~
reconfig_to_pll[39] => ~NO_FANOUT~
reconfig_to_pll[40] => ~NO_FANOUT~
reconfig_to_pll[41] => ~NO_FANOUT~
reconfig_to_pll[42] => ~NO_FANOUT~
reconfig_to_pll[43] => ~NO_FANOUT~
reconfig_to_pll[44] => ~NO_FANOUT~
reconfig_to_pll[45] => ~NO_FANOUT~
reconfig_to_pll[46] => ~NO_FANOUT~
reconfig_to_pll[47] => ~NO_FANOUT~
reconfig_to_pll[48] => ~NO_FANOUT~
reconfig_to_pll[49] => ~NO_FANOUT~
reconfig_to_pll[50] => ~NO_FANOUT~
reconfig_to_pll[51] => ~NO_FANOUT~
reconfig_to_pll[52] => ~NO_FANOUT~
reconfig_to_pll[53] => ~NO_FANOUT~
reconfig_to_pll[54] => ~NO_FANOUT~
reconfig_to_pll[55] => ~NO_FANOUT~
reconfig_to_pll[56] => ~NO_FANOUT~
reconfig_to_pll[57] => ~NO_FANOUT~
reconfig_to_pll[58] => ~NO_FANOUT~
reconfig_to_pll[59] => ~NO_FANOUT~
reconfig_to_pll[60] => ~NO_FANOUT~
reconfig_to_pll[61] => ~NO_FANOUT~
reconfig_to_pll[62] => ~NO_FANOUT~
reconfig_to_pll[63] => ~NO_FANOUT~
extswitch => ~NO_FANOUT~
adjpllin => ~NO_FANOUT~
cclk => ~NO_FANOUT~
outclk[0] <= general[0].gpll.O_OUTCLK
outclk[1] <= general[1].gpll.O_OUTCLK
fboutclk <= general[0].gpll.O_FBOUTCLK
locked <= general[0].gpll.LOCKED
phase_done <= <GND>
reconfig_from_pll[0] <= <GND>
reconfig_from_pll[1] <= <GND>
reconfig_from_pll[2] <= <GND>
reconfig_from_pll[3] <= <GND>
reconfig_from_pll[4] <= <GND>
reconfig_from_pll[5] <= <GND>
reconfig_from_pll[6] <= <GND>
reconfig_from_pll[7] <= <GND>
reconfig_from_pll[8] <= <GND>
reconfig_from_pll[9] <= <GND>
reconfig_from_pll[10] <= <GND>
reconfig_from_pll[11] <= <GND>
reconfig_from_pll[12] <= <GND>
reconfig_from_pll[13] <= <GND>
reconfig_from_pll[14] <= <GND>
reconfig_from_pll[15] <= <GND>
reconfig_from_pll[16] <= <GND>
reconfig_from_pll[17] <= <GND>
reconfig_from_pll[18] <= <GND>
reconfig_from_pll[19] <= <GND>
reconfig_from_pll[20] <= <GND>
reconfig_from_pll[21] <= <GND>
reconfig_from_pll[22] <= <GND>
reconfig_from_pll[23] <= <GND>
reconfig_from_pll[24] <= <GND>
reconfig_from_pll[25] <= <GND>
reconfig_from_pll[26] <= <GND>
reconfig_from_pll[27] <= <GND>
reconfig_from_pll[28] <= <GND>
reconfig_from_pll[29] <= <GND>
reconfig_from_pll[30] <= <GND>
reconfig_from_pll[31] <= <GND>
reconfig_from_pll[32] <= <GND>
reconfig_from_pll[33] <= <GND>
reconfig_from_pll[34] <= <GND>
reconfig_from_pll[35] <= <GND>
reconfig_from_pll[36] <= <GND>
reconfig_from_pll[37] <= <GND>
reconfig_from_pll[38] <= <GND>
reconfig_from_pll[39] <= <GND>
reconfig_from_pll[40] <= <GND>
reconfig_from_pll[41] <= <GND>
reconfig_from_pll[42] <= <GND>
reconfig_from_pll[43] <= <GND>
reconfig_from_pll[44] <= <GND>
reconfig_from_pll[45] <= <GND>
reconfig_from_pll[46] <= <GND>
reconfig_from_pll[47] <= <GND>
reconfig_from_pll[48] <= <GND>
reconfig_from_pll[49] <= <GND>
reconfig_from_pll[50] <= <GND>
reconfig_from_pll[51] <= <GND>
reconfig_from_pll[52] <= <GND>
reconfig_from_pll[53] <= <GND>
reconfig_from_pll[54] <= <GND>
reconfig_from_pll[55] <= <GND>
reconfig_from_pll[56] <= <GND>
reconfig_from_pll[57] <= <GND>
reconfig_from_pll[58] <= <GND>
reconfig_from_pll[59] <= <GND>
reconfig_from_pll[60] <= <GND>
reconfig_from_pll[61] <= <GND>
reconfig_from_pll[62] <= <GND>
reconfig_from_pll[63] <= <GND>
activeclk <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
phout[0] <= <GND>
phout[1] <= <GND>
phout[2] <= <GND>
phout[3] <= <GND>
phout[4] <= <GND>
phout[5] <= <GND>
phout[6] <= <GND>
phout[7] <= <GND>
lvds_clk[0] <= <GND>
lvds_clk[1] <= <GND>
loaden[0] <= <GND>
loaden[1] <= <GND>
extclk_out[0] <= <GND>
extclk_out[1] <= <GND>
cascade_out[0] <= <GND>
cascade_out[1] <= <GND>
zdbfbclk <> <GND>


